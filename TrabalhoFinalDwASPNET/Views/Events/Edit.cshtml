@model TrabalhoFinalDwASPNET.Models.Events
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Editar";
}

<style>
    .row {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 50px;
    }

    .base {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 50vh;
        flex-direction: column;
        text-align: center;
    }

    .tag-remove {
        display: inline-block;
        width: 20px;
        height: 20px;
        line-height: 20px;
        text-align: center;
        margin-left: 5px;
        cursor: pointer;
        color: #ff0000;
        font-weight: bold;
    }

    .tag-remove:hover {
        background-color: #ff0000;
        color: #ffffff;
        border-radius: 50%;
    }

</style>

@if (!SignInManager.IsSignedIn(User))
{
    <div class="base">
        <h4>VOCÊ PRECISA ESTAR LOGADO PARA EDITAR EVENTOS!</h4>
        <a class="btn btn-primary mb-2" asp-area="Identity" asp-page="/Account/Login">Login</a>
        <a class="btn btn-secondary" asp-area="Identity" asp-page="/Account/Register">Registrar</a>
    </div>
}
else
{
    <h1>Editar</h1>

    <h4>Eventos</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />
                <div style="display:none" class="form-group">
                    <label asp-for="host_id" class="control-label"></label>
                    <input asp-for="host_id" class="form-control" />
                    <span asp-validation-for="host_id" class="text-danger"></span>
                </div>
                <div style="display:none" class="form-group">
                    <label asp-for="created_at" class="control-label"></label>
                    <input asp-for="created_at" class="form-control" />
                    <span asp-validation-for="created_at" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="title" class="control-label"></label>
                    <input asp-for="title" class="form-control" />
                    <span asp-validation-for="title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Image" class="control-label"></label>
                    <input asp-for="Image" class="form-control" />
                    <span asp-validation-for="Image" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="start_time" class="control-label"></label>
                    <input asp-for="start_time" class="form-control" />
                    <span asp-validation-for="start_time" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="end_time" class="control-label"></label>
                    <input asp-for="end_time" class="form-control" />
                    <span asp-validation-for="end_time" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="location" class="control-label"></label>
                    <input asp-for="location" class="form-control" />
                    <span asp-validation-for="location" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="is_private" /> @Html.DisplayNameFor(model => model.is_private)
                    </label>
                </div>
                <div class="form-group">
                    <label asp-for="maxParticipants" class="control-label"></label>
                    <input asp-for="maxParticipants" class="form-control" />
                    <span asp-validation-for="maxParticipants" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Tags</label>
                    <input type="text" id="tagInput" class="form-control" placeholder="Digite uma tag e pressione Enter" />
                    <div class="tag-container" id="tagContainer">
                        @foreach (var eventTag in Model.EventTags)
                        {
                            <div class="tag">
                                <span>@eventTag.Tag.Name</span>
                                <span class="tag-remove" onclick="removeTag(this)">×</span>
                                <input type="hidden" name="tags" value="@eventTag.Tag.Name" />
                            </div>
                        }
                    </div>
                </div>

                <br />
                <div class="form-group">
                    <input type="submit" value="Salvar" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <button class="btn btn-secondary mt-3" onclick="location.href='@Url.Action("MyEvents", "Events")'">Voltar para a Lista</button>
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        <script>
            const MAX_TAGS = 5;

            document.getElementById('tagInput').addEventListener('keypress', function (e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    var tagName = this.value.trim();
                    if (tagName && document.querySelectorAll('.tag').length < MAX_TAGS) {
                        var tagContainer = document.getElementById('tagContainer');
                        var tagElement = document.createElement('div');
                        tagElement.classList.add('tag');
                        tagElement.innerHTML = `
                                    <span>${tagName}</span>
                                    <span class="tag-remove" onclick="removeTag(this)">×</span>
                                    <input type="hidden" name="tags" value="${tagName}" />
                                `;
                        tagContainer.appendChild(tagElement);
                        this.value = '';
                    } else if (document.querySelectorAll('.tag').length >= MAX_TAGS) {
                        alert('Você já atingiu o limite máximo de 5 tags.');
                    }
                }
            });

            function removeTag(element) {
                element.parentElement.remove();
            }
        </script>
    }
}
